// 0764. Largest Plus Sign
class Solution {
    public int orderOfLargestPlusSign(int n, int[][] mines) {
        int[][] grid = new int[n][n];
        int[][] maxArm = new int[n][n];
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                grid[i][j] = 1;
            }
        }
        for (int[] mine : mines) {
            grid[mine[0]][mine[1]] = 0;
        }
        for (int i = 0; i < n; ++i) {
            int continuesOnes = 0;
            for (int j = 0; j < n; ++j) {
                continuesOnes = (continuesOnes + grid[i][j]) * grid[i][j];
                maxArm[i][j] = continuesOnes;
            }
            continuesOnes = 0;
            for (int j = n - 1; j >= 0; --j) {
                continuesOnes = (continuesOnes + grid[i][j]) * grid[i][j];
                maxArm[i][j] = Math.min(maxArm[i][j], continuesOnes);
            }
        }
        for (int j = 0; j < n; ++j) {
            int continuesOnes = 0;
            for (int i = 0; i < n; ++i) {
                continuesOnes = (continuesOnes + grid[i][j]) * grid[i][j];
                maxArm[i][j] = Math.min(maxArm[i][j], continuesOnes);
            }
            continuesOnes = 0;
            for (int i = n - 1; i >= 0; --i) {
                continuesOnes = (continuesOnes + grid[i][j]) * grid[i][j];
                maxArm[i][j] = Math.min(maxArm[i][j], continuesOnes);
            }
        }
        int ans = 0;
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                ans = Math.max(ans, maxArm[i][j]);
            }
        }
        return ans;
    }
}
