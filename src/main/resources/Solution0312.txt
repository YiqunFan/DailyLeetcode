// 0312. Burst Balloons
class Solution {
    public int maxCoins(int[] nums) {
        int n = nums.length;
        int[] balloons = new int[n + 2];
        balloons[0] = 1;
        balloons[n + 1] = 1;
        for (int i = 0; i < n; ++i) {
            balloons[i + 1] = nums[i];
        }
        int[][] maxCoins = new int[n + 2][n + 2];
        for (int len = 1; len <= n; ++len) {
            for (int left = 1; left <= n - len + 1; ++left) {
                int right = left + len - 1;
                for (int mid = left; mid <= right; ++mid) {
                    maxCoins[left][right] = Math.max(maxCoins[left][right], maxCoins[left][mid - 1] + maxCoins[mid + 1][right] + balloons[left - 1] * balloons[mid] * balloons[right + 1]);
                }
            }
        }
        return maxCoins[1][n];
    }
}
