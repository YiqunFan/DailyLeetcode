import java.util.Arrays;

// 2517. Maximum Tastiness of Candy Basket
class Solution {
    public int maximumTastiness(int[] price, int k) {
        Arrays.sort(price);
        int left = 0;
        int right = price[price.length - 1];
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (basket(price, mid, k)) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return left - 1;
    }

    private boolean basket(int[] price, int mid, int k) {
        int count = 0;
        int previousPrice = price[0];
        for (int i = 1; i < price.length; ++i) {
            if (previousPrice + mid <= price[i]) {
                previousPrice = price[i];
                ++count;
                if (count >= k - 1) {
                    return true;
                }
            }
        }
        return false;
    }
}
