import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.Stack;

// 2454. Next Greater Element IV
class Solution {
    public int[] secondGreaterElement(int[] nums) {
        int len = nums.length;
        int[] ans = new int[len];
        Arrays.fill(ans, -1);
        Stack<Integer> winners = new Stack<>();
        PriorityQueue<Loser> losers = new PriorityQueue<>((a, b) -> a.value - b.value);
        for (int i = 0; i < len; ++i) {
            while (!losers.isEmpty() && losers.peek().value < nums[i]) {
                ans[losers.poll().index] = nums[i];
            }
            while (!winners.isEmpty() && nums[winners.peek()] < nums[i]) {
                losers.offer(new Loser(nums[winners.peek()], winners.pop()));
            }
            winners.push(i);
        }
        return ans;
    }
}

class Loser {
    public Loser(int value, int index) {
        this.value = value;
        this.index = index;
    }

    int value;
    int index;
}
