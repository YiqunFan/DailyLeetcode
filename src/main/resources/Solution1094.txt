import java.util.Arrays;
import java.util.PriorityQueue;

// 1094. Car Pooling
class Solution {
    public boolean carPooling(int[][] trips, int capacity) {
        Arrays.sort(trips, (t1, t2) -> (t1[1] - t2[1]));
        PriorityQueue<int[]> pq = new PriorityQueue<>((t1, t2) -> (t1[2] - t2[2]));
        int len = trips.length;
        for (int[] trip : trips) {
            int time = trip[1];
            while (!pq.isEmpty() && pq.peek()[2] <= time) {
                capacity += pq.poll()[0];
            }
            if (trip[0] > capacity) {
                return false;
            }
            capacity -= trip[0];
            pq.offer(trip);
        }
        return true;
    }
}
