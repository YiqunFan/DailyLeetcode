import java.util.HashMap;
import java.util.Map;
import java.util.Set;

// 2423. Remove Letter To Equalize Frequency
class Solution {
    public boolean equalFrequency(String word) {
        char[] chars = word.toCharArray();
        int len = chars.length;
        int[] frequencies = new int[26];
        for (char c : chars) {
            ++frequencies[c - 'a'];
        }
        HashMap<Integer, Integer> frequencyTimes = new HashMap<>();
        for (int frequency : frequencies) {
            if (frequency != 0) {
                frequencyTimes.put(frequency, frequencyTimes.getOrDefault(frequency, 0) + 1);
            }
        }
        if (frequencyTimes.size() == 1) {
            return frequencyTimes.containsKey(1) || frequencyTimes.containsValue(1);
        }
        if (frequencyTimes.size() > 2) return false;
        Set<Map.Entry<Integer, Integer>> entrySet = frequencyTimes.entrySet();
        int[] frequenciesInSet = new int[2];
        int[] timesInSet = new int[2];
        int i = 0;
        for (Map.Entry<Integer, Integer> e : entrySet) {
            frequenciesInSet[i] = e.getKey();
            timesInSet[i] = e.getValue();
            ++i;
        }
        if (frequenciesInSet[0] == 1) {
            if (timesInSet[0] == 1) {
                return true;
            }
        }
        if (frequenciesInSet[1] == 1) {
            if (timesInSet[1] == 1) {
                return true;
            }
        }
        if (frequenciesInSet[0] - frequenciesInSet[1] == 1) {
            return timesInSet[0] == 1;
        } else if (frequenciesInSet[1] - frequenciesInSet[0] == 1) {
            return timesInSet[1] == 1;
        }
        return false;
    }
}
